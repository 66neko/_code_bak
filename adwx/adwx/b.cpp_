#include<iostream>
#include<cstring>
using namespace std;

int map[1002][1002];
int visit[1002][1002];
int dre_x[5] = {0,-1,1,0,0};
int dre_y[5] = {0,0,0,-1,1};
int n,m,q;
int ans;
int xs,ys,xe,ye;
int flag;
void DFS(int x,int y,int d,int s,int k)
{
	if(x == xe && y == ye && s<= 2)
	{
		ans = 1;
		flag = 1;
		return;
	}
	for(int i=1;i<=4;i++)
	{
		if(flag == 1)
			return;
		if(d != i)
		{
			s++;
			if((map[x+dre_x[i]][y+dre_y[i]] == 0 || (x+dre_x[i] == xe && y+dre_y[i] == ye)) && (visit[x+dre_x[i]][y+dre_y[i]] == 0 || visit[x+dre_x[i]][y+dre_y[i]] >= s) && s <= 2)
			{
				visit[x+dre_x[i]][y+dre_y[i]] = s;
				DFS(x+dre_x[i],y+dre_y[i],i,s,k);
			}
			s--;
		}
		else
		{
			if((map[x+dre_x[i]][y+dre_y[i]] == 0 || (x+dre_x[i] == xe && y+dre_y[i] == ye)) && (visit[x+dre_x[i]][y+dre_y[i]] == 0 || visit[x+dre_x[i]][y+dre_y[i]] >= s))
			{
				visit[x+dre_x[i]][y+dre_y[i]] = s;
				DFS(x+dre_x[i],y+dre_y[i],i,s,k);
			}
		}
	}
}
int main()
{
	while(cin>>n>>m)
	{
		if(m+n == 0)return 0;
		memset(map,-1,sizeof(map));
		
		for(int i=1;i<=n;i++)
			for(int j=1;j<=m;j++)
				cin>>map[i][j];
		cin>>q;
		while(q--)
		{
			ans = 0;
			flag = 0;
			memset(visit,0,sizeof(visit));
			cin>>xs>>ys>>xe>>ye;
			if(map[xs][ys] == map[xe][ye] && map[xs][ys] != 0)
			{
				DFS(xs,ys,-1,-1,map[xe][ye]);
			}
			else
			{
				ans = 0;
			}
			if(ans)
			{
				cout<<"YES"<<endl;
			}
			else
			{
				cout<<"NO"<<endl;
			}
		}
	}
}